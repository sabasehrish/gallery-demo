# In order to use gallery, you must use the UPS setup command to make the
# appropriate packages active. The appropriate packages include those defined
# by your experiment and which provide the ROOT dictionaries for the data
# products in the file you are going to read.
#
#
# This example uses the product dunetpc, which provides the libraries
# for the DUNE experiment, including the ROOT dictionaries. Setting up dunetpc sets up neither gallery
# nor cmake, so we set them up directly.
#

# Adjust the next line, if necessary, to reflect the location into
# which you have installed the products.
PRODUCTS_DIRECTORY="${HOME}/products"

if ! type -p ups
then
  if [ ! -f "${PRODUCTS_DIRECTORY}/setup" ]
  then
    echo "You do not have the UPS products installed under ${PRODUCTS_DIRECTORY}"
    echo "Please edit this script to reflect the location of your UPS products."
    return 1
  else
    source "${PRODUCTS_DIRECTORY}/setup"
  fi
fi


# The following setup assumes you want the specified version of the dunetpc
# software.  You should replace it with whatever product and version is
# appropriate for your experiment. If your experiment has a setup script that
# you have used above, you probably don't need to do this at all. If your
# experiment setup already sets up gallery, you don't need to do (and should not
# do) the gallery setup again. Please note the use of the -B option, and the '+'
# modifiers in the arguments of the -q option. These are used to assure we can
# diagnose an inconsistency between what products you might already have setup,
# the experiment environment you setup, and the qualified version of gallery you
# setup. Forming the regulary habit of using these options is recommended
# practice, because it is best to diagnose incompatibilities before they cause
# compilation failures, linkining failures, or runtime failures.
#
#setup -B dunetpc v06_34_00 -q +e14:+prof
setup -B gallery v1_03_12 -q +e14:+prof:+nu
setup -B range v3_0_2_4
# The following setup assumes you want the specified version of the
# larsoftobj distribution bundle. larsoftobj contains all the data
# products that are part of LArSoft, but none of the algorithmic
# code. It is the smallest system that is able to read all
# LArSoft-related art/ROOT data files. Setting up larsoftobj also sets
# up the appropriate version of the gallery product.
#
setup -B larsoftobj v1_19_01 -q +e14:+prof

# The gallery demo is built using CMake, so you'll need a recent
# version of CMake.

setup -B cmake v3_7_1
